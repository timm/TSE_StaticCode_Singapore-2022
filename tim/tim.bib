@article{IEEE:Harman,
  title={Search-based software engineering},
  author={Harman, Mark and Jones, Bryan F},
  journal={Information and software Technology},
  volume={43},
  number={14},
  pages={833--839},
  year={2001},
  publisher={Elsevier}
}

@ARTICLE{9064604,
  author={Tu, H. and Yu, Z. and Menzies, T.},
  journal={IEEE TSE}, 
  title={Better Data Labelling With EMBLEM (and how that Impacts Defect Prediction)}, 
  year={2022}}

@article{yang2021understanding,
  title={Understanding static code warnings: An incremental AI approach},
  author={Yang, Xueqi and Yu, Zhe and Wang, Junjie and Menzies, Tim},
  journal={Expert Systems with Applications},
  volume={167},
  pages={114134},
  year={2021},
  publisher={Elsevier}
}


@article{Deb05,
author = {Deb, Kalyan and Mohan, Manikanth and Mishra, Shikhar},
year = {2005},
month = {02},
pages = {501-25},
title = {Evaluating the $\epsilon$-Dominance Based Multi-Objective Evolutionary Algorithm for a Quick Computation of Pareto-Optimal Solutions},
volume = {13},
journal = {Evolutionary computation},
doi = {10.1162/106365605774666895}
}

@online{norvig11,
	title        = {The  {U}nreasonable {E}ffectiveness of {D}ata},
	author       = {Peter Norvig},
	year         = 2011,
	url          = {https://www.youtube.com/watch?v=yvDCzhbjYWs},
	organization = {Youtube}
}

@book{WittenFH11,
  author    = {Ian H. Witten and
               Eibe Frank and
               Mark A. Hall},
  title     = {Data mining: practical machine learning tools and techniques, 3rd
               Edition},
  publisher = {Morgan Kaufmann, Elsevier},
  year      = {2011},
  url       = {https://www.worldcat.org/oclc/262433473},
  isbn      = {9780123748560},
  timestamp = {Fri, 17 Jul 2020 01:00:00 +0200},
  biburl    = {https://dblp.org/rec/books/lib/WittenFH11.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{kim07,
author = {Kim, Sunghun and Ernst, Michael D.},
title = {Which Warnings Should I Fix First?},
year = {2007},
isbn = {9781595938114},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1287624.1287633},
doi = {10.1145/1287624.1287633},
abstract = {Automatic bug-finding tools have a high false positive rate: most warnings do not indicate real bugs. Usually bug-finding tools assign important warnings high priority. However, the prioritization of tools tends to be ineffective. We observed the warnings output by three bug-finding tools, FindBugs, JLint, and PMD, for three subject programs, Columba, Lucene, and Scarab. Only 6%, 9%, and 9% of warnings are removed by bug fix changes during 1 to 4 years of the software development. About 90% of warnings remain in the program or are removed during non-fix changes -- likely false positive warnings. The tools' warning prioritization is little help in focusing on important warnings: the maximum possible precision by selecting high-priority warning instances is only 3%, 12%, and 8% respectively.In this paper, we propose a history-based warning prioritization algorithm by mining warning fix experience that is recorded in the software change history. The underlying intuition is that if warnings from a category are eliminated by fix-changes, the warnings are important. Our prioritization algorithm improves warning precision to 17%, 25%, and 67% respectively.},
booktitle = {Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
pages = {45â€“54},
numpages = {10},
keywords = {bug-finding tool, fix, prediction, bug, patterns, fault},
location = {Dubrovnik, Croatia},
series = {ESEC-FSE '07}
}